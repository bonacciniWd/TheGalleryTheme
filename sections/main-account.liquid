{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  /* --- Estilos Adicionais para a UI da Conta --- */
  .customer.account {
    display: flex;
    flex-direction: column; /* Coloca o cabeçalho acima do conteúdo principal */
    gap: 10px; /* Espaço entre as seções principais */
  }

  .customer__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #e0e0e0;
    padding-bottom: 10px;
    margin-bottom: 0px;
  }

  .customer__main-content {
    display: grid; /* Usa grid para o layout principal */
    grid-template-columns: 1fr; /* Coluna única em mobile */
    gap: 10px;
  }

  @media screen and (min-width: 750px) {
    .customer__main-content {
      grid-template-columns: 2fr 1fr; /* Duas colunas em desktop: Histórico de Pedidos e Info da Conta/Pontos */
      gap: 10px; /* Mais espaço em desktop */
    }
  }

  .customer__info-column {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  /* Estilo base para os cards de informação (agora apenas para o card de endereço) */
  .account-info-box {
    background-color: #ffffff; /* Fundo branco puro */
    border: 1px solid #ff0000;
    border-radius: 8px;
    padding: 25px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  }

  .account-info-box h2 {
    margin-top: 0;
    margin-bottom: 15px;
    font-size: 1.4em;
    color: #333;
  }

  /* ESTILO DO CARD DE PONTUAÇÃO (RESTAURADO E AJUSTADO) */
  .customer-points-card {
    background: radial-gradient(49% 81% at 45% 47%, #FFE20345 0%, #073AFF00 100%),radial-gradient(113% 91% at 17% -2%, #FF5A00FF 1%, #FF000000 99%),radial-gradient(142% 91% at 83% 7%, #FFDB00FF 1%, #FF000000 99%),radial-gradient(142% 91% at -6% 74%, #FF0049FF 1%, #FF000000 99%),radial-gradient(142% 91% at 111% 84%, #FF7000FF 0%, #FF0000FF 100%);
    color: white; /* Texto branco RESTAURADO */
    padding: 25px;
    border-radius: 8px;
    text-align: center;
    box-shadow: 0 5px 15px rgba(0,0,0,0.15);
  }

  .customer-points-card h2 {
    color: white; /* Título branco */
    font-size: 1.5em;
    margin-bottom: 10px;
  }

  .customer-points-value {
    font-size: 3em; /* Tamanho grande para os pontos */
    font-weight: bold;
    margin-bottom: 10px;
    color: white; /* Pontos brancos para contraste com o fundo escuro do gradiente */
  }

  .customer-points-message {
    font-size: 0.9em;
    opacity: 0.9;
    margin-bottom: 20px; /* Espaço antes do botão */
  }

  /* ESTILO DO BOTÃO DENTRO DO CARD DE PONTOS */
  .customer-points-card .button {
    display: inline-block;
    padding: 12px 20px;
    background-color: #D32F2F;  
    color: white;
    border-radius: 15px;
    text-decoration: none;
    font-weight: bold;
    transition: background-color 0.3s ease, border-color 0.3s ease; /* Adicionei a transição para hover */
  }

  .customer-points-card .button:hover {
    background-color: #000; /* Um tom ainda mais escuro no hover */
    border-color: white; /* Borda sólida branca no hover */
    text-decoration: none;
    color: white;
  }

  /* NOVO: Estilos para o bloco de conversão AVA-COIN - AGORA ESTILIZADO COMO O CARD DE PONTOS */
  .ava-coin-conversion {
    background: radial-gradient(49% 81% at 45% 47%, #FFE20345 0%, #073AFF00 100%),radial-gradient(113% 91% at 17% -2%, #FF5A00FF 1%, #FF000000 99%),radial-gradient(142% 91% at 83% 7%, #FFDB00FF 1%, #FF000000 99%),radial-gradient(142% 91% at -6% 74%, #FF0049FF 1%, #FF000000 99%),radial-gradient(142% 91% at 111% 84%, #FF7000FF 0%, #FF0000FF 100%);
    color: white; /* Texto branco para contraste com o fundo escuro */
    padding: 25px;
    border-radius: 8px;
    text-align: center;
    box-shadow: 0 5px 15px rgba(0,0,0,0.15); /* Sombra igual ao card de pontos */
    margin-top: 0px; /* Já está dentro de uma coluna com gap */
  }

  .ava-coin-conversion h2 {
    color: white; /* Título branco */
    font-size: 1.5em;
    margin-bottom: 10px;
  }

  .ava-coin-conversion p {
    margin-bottom: 10px;
    font-size: 1em;
    opacity: 0.9; /* Deixa o texto do parágrafo um pouco menos forte que o título */
  }

  .ava-coin-conversion p strong {
    color: white; /* Garante que o strong também seja branco */
    font-size: 1.1em;
  }


  .convert-button {
    background-color: #4CAF50; /* Verde vibrante */
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s ease, transform 0.2s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }

  .convert-button:hover {
    background-color: #388E3C; /* Um verde mais escuro no hover */
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  }

  .convert-button:disabled {
    background-color: #ccc;
    color: #666;
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
  }


  /* ESTILIZAÇÃO DA TABELA DE HISTÓRICO DE PEDIDOS */
  .order-history {
    width: 100%;
    border-collapse: collapse;
    margin-top: 15px;
  }

  .order-history th,
  .order-history td {
    padding: 12px 15px;
    border: 1px solid #e0e0e0;
    text-align: left;
    font-size: 0.85em; /* Fonte ligeiramente menor para caber melhor */
    line-height: 1.3;
  }

  .order-history th {
    background-color: #f2f2f2;
    font-weight: 600;
    white-space: nowrap; /* Impede que os cabeçalhos quebrem em múltiplas linhas */
  }

  .order-history tbody tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  .order-history a {
    color: var(--color-link, #007bff); /* Usa a variável do tema, com fallback */
    text-decoration: none;
  }

  .order-history a:hover {
    text-decoration: underline;
  }

  /* RESPONSIVIDADE DA TABELA PARA MOBILE */
  @media screen and (max-width: 749px) {
    .order-history, .order-history tbody, .order-history tr, .order-history td {
      display: block;
      width: 100%;
    }

    .order-history thead {
      display: none; /* Esconde o cabeçalho da tabela em mobile */
    }

    .order-history tr {
      margin-bottom: 15px;
      border: 1px solid #e0e0e0;
      border-radius: 8px;
      overflow: hidden;
      display: flex;
      flex-direction: column;
      background-color: #fff; /* Fundo branco para cada linha em mobile */
      box-shadow: 0 1px 3px rgba(0,0,0,0.08); /* Sombra para destacar as linhas */
    }

    .order-history td {
      text-align: right;
      padding-left: 50%; /* Espaço para o label */
      position: relative;
      font-size: 0.9em;
      border: none; /* Remove bordas internas entre as células */
      padding-top: 8px;
      padding-bottom: 8px;
    }

    .order-history td:first-child {
      padding-top: 15px; /* Mais padding no topo da primeira célula */
    }
    .order-history td:last-child {
      padding-bottom: 15px; /* Mais padding na parte inferior da última célula */
      border-bottom: none; /* Remove a borda inferior da última célula */
    }


    .order-history td::before {
      content: attr(data-label); /* Mostra o data-label como pseudo-elemento */
      position: absolute;
      left: 15px;
      width: calc(50% - 30px); /* Largura do label */
      padding-right: 10px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      font-weight: bold;
      text-align: left;
      color: #333;
    }
  }

  /* Pequenas melhorias para o link de sair */
  .customer__header a {
    display: flex;
    align-items: center;
    gap: 5px;
    color: #555;
    text-decoration: none;
    font-weight: 500;
  }
  .customer__header a:hover {
    color: var(--color-link, #0056b3);
    text-decoration: underline;
  }
  .customer__header .svg-wrapper {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .customer__header .svg-wrapper svg {
    width: 100%;
    height: 100%;
    fill: currentColor;
  }

{%- endstyle -%}

<div class="customer account section-{{ section.id }}-padding">
  <div class="customer__header">
    <h1 class="customer__title">{{ 'customer.account.title' | t }}</h1>
    <a href="{{ routes.account_logout_url }}">
      <span class="svg-wrapper">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-account" viewBox="0 0 20 20">
          <path d="M10 0a5 5 0 0 1 5 5v2h2V5a7 7 0 0 0-14 0v2h2V5a5 5 0 0 1 5-5zm0 9c-3.313 0-6 2.687-6 6v5h12v-5c0-3.313-2.687-6-6-6zm0 2c2.206 0 4 1.794 4 4v3H6v-3c0-2.206 1.794-4 4-4z"/>
        </svg>
      </span>
      {{ 'customer.log_out' | t }}
    </a>
  </div>

  <div class="customer__main-content">
    <div class="customer__orders">
      <div class="account-info-box">
        <h2>{{ 'customer.orders.title' | t }}</h2>

        {% paginate customer.orders by 20 %}
          {%- if customer.orders.size > 0 -%}
            <table role="table" class="order-history">
              <caption class="visually-hidden">
                {{ 'customer.orders.title' | t }}
              </caption>
              <thead role="rowgroup">
                <tr role="row">
                  <th id="ColumnOrder" scope="col" role="columnheader">{{ 'customer.orders.order_number' | t }}</th>
                  <th id="ColumnDate" scope="col" role="columnheader">{{ 'customer.orders.date' | t }}</th>
                  <th id="ColumnPayment" scope="col" role="columnheader">{{ 'customer.orders.payment_status' | t }}</th>
                  <th id="ColumnFulfillment" scope="col" role="columnheader">
                    {{ 'customer.orders.fulfillment_status' | t }}
                  </th>
                  <th id="ColumnTotal" scope="col" role="columnheader">{{ 'customer.orders.total' | t }}</th>
                </tr>
              </thead>
              <tbody role="rowgroup">
                {%- for order in customer.orders -%}
                  <tr role="row">
                    <td
                      id="RowOrder"
                      role="cell"
                      headers="ColumnOrder"
                      data-label="{{ 'customer.orders.order_number' | t }}"
                    >
                      <a
                        href="{{ order.customer_url }}"
                        aria-label="{{ 'customer.orders.order_number_link' | t: number: order.name }}"
                      >
                        {{ order.name }}
                      </a>
                    </td>
                    <td headers="RowOrder ColumnDate" role="cell" data-label="{{ 'customer.orders.date' | t }}">
                      {{ order.created_at | time_tag: format: 'date' }}
                    </td>
                    <td
                      headers="RowOrder ColumnPayment"
                      role="cell"
                      data-label="{{ 'customer.orders.payment_status' | t }}"
                    >
                      {{ order.financial_status_label }}
                    </td>
                    <td
                      headers="RowOrder ColumnFulfillment"
                      role="cell"
                      data-label="{{ 'customer.orders.fulfillment_status' | t }}"
                    >
                      {{ order.fulfillment_status_label }}
                    </td>
                    <td headers="RowOrder ColumnTotal" role="cell" data-label="{{ 'customer.orders.total' | t }}">
                      {{ order.total_net_amount | money_with_currency }}
                    </td>
                  </tr>
                {%- endfor -%}
              </tbody>
            </table>
          {%- else -%}
            <p>{{ 'customer.orders.none' | t }}</p>
          {%- endif -%}

          {%- if paginate.pages > 1 -%}
            {%- if paginate.parts.size > 0 -%}
              <nav class="pagination" role="navigation" aria-label="{{ 'general.pagination.label' | t }}">
                <ul role="list">
                  {%- if paginate.previous -%}
                    <li>
                      <a href="{{ paginate.previous.url }}" aria-label="{{ 'general.pagination.previous' | t }}">
                        <span class="svg-wrapper">
                          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-caret" viewBox="0 0 10 6">
                            <path d="M9.664 5.996a.343.343 0 0 1-.247-.1C9.28 5.617 5.093.593 5.093.593c-.001 0-.001 0-.002 0a.346.346 0 0 1-.247-.1A.347.347 0 0 1 4.598.1a.343.343 0 0 1 .247-.1.343.343 0 0 1 .247.1l4.498 4.498c.134.135.134.358 0 .493a.343.343 0 0 1-.247.1zm-8.877-.245a.343.343 0 0 1-.247-.1C.406 5.617 4.593.593 4.593.593c.001 0 .001 0 .002 0a.346.346 0 0 1 .247-.1A.347.347 0 0 1 5.402.1a.343.343 0 0 1-.247-.1L.657 4.5a.343.343 0 0 1-.247.1z" fill="currentColor"/>
                          </svg>
                        </span>
                      </a>
                    </li>
                  {%- endif -%}

                  {%- for part in paginate.parts -%}
                    <li>
                      {%- if part.is_link -%}
                        <a href="{{ part.url }}" aria-label="{{ 'general.pagination.page' | t: number: part.title }}">
                          {{- part.title -}}
                        </a>
                      {%- else -%}
                        {%- if part.title == paginate.current_page -%}
                          <span aria-current="page" aria-label="{{ 'general.pagination.page' | t: number: part.title }}">
                            {{- part.title -}}
                          </span>
                        {%- else -%}
                          <span>{{ part.title }}</span>
                        {%- endif -%}
                      {%- endif -%}
                    </li>
                  {%- endfor -%}

                  {%- if paginate.next -%}
                    <li>
                      <a href="{{ paginate.next.url }}" aria-label="{{ 'general.pagination.next' | t }}">
                        <span class="svg-wrapper">
                          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-caret" viewBox="0 0 10 6">
                            <path d="M9.664 5.996a.343.343 0 0 1-.247-.1C9.28 5.617 5.093.593 5.093.593c-.001 0-.001 0-.002 0a.346.346 0 0 1-.247-.1A.347.347 0 0 1 4.598.1a.343.343 0 0 1 .247-.1.343.343 0 0 1 .247.1l4.498 4.498c.134.135.134.358 0 .493a.343.343 0 0 1-.247.1zm-8.877-.245a.343.343 0 0 1-.247-.1C.406 5.617 4.593.593 4.593.593c.001 0 .001 0 .002 0a.346.346 0 0 1 .247-.1A.347.347 0 0 1 5.402.1a.343.343 0 0 1-.247-.1L.657 4.5a.343.343 0 0 1-.247.1z" fill="currentColor"/>
                          </svg>
                        </span>
                      </a>
                    </li>
                  {%- endif -%}
                </ul>
              </nav>
            {%- endif -%}
          {%- endif -%}
        {% endpaginate %}
      </div>
    </div>

    <div class="customer__info-column">
      {# Cartão de Pontuação do Cliente #}
      <div class="customer-points-card">
        <h2>Suas Pontuações</h2>
        {% assign customer_points = customer.metafields.custom.customer_points.value %}
        {% if customer_points != blank %}
          <div class="customer-points-value">{{ customer_points }}</div>
          <p class="customer-points-message">Continue comprando para acumular mais pontos e desbloquear recompensas!</p>
        {% else %}
          <div class="customer-points-value">0</div>
          <p class="customer-points-message">Comece a comprar ou jogar para acumular pontos!</p>
        {% endif %}
        
        <a href="/pages/programa-de-fidelidade" class="button">Saiba mais sobre pontos</a>
      </div>

      {# NOVO: Menu de Conversão de AVA-COIN #}
      <div class="ava-coin-conversion"> {# Removi a classe 'account-info-box' pois ela tem estilos de borda vermelha #}
        <h2>Converter AVA-COIN em Pontos da Loja</h2>
        {% assign ava_coin = customer.metafields.custom.ava_coin.value | default: 0 %}
        {% assign loja_pontos_a_converter = ava_coin | divided_by: 100 | floor %} {# 1000 AVA-COIN = 10 pontos (dividir por 100) #}

        <p>Você possui <strong>{{ ava_coin }}</strong> AVA-COIN.</p>
        <p>A taxa de conversão é de **1000 AVA-COIN** para **10 Pontos da Loja**.</p>
        <p>Com seus AVA-COIN, você pode converter em <strong>{{ loja_pontos_a_converter }}</strong> Pontos da Loja.</p>
        
        {% if ava_coin >= 1000 %}
          <button class="button convert-button" data-ava-coin="{{ ava_coin }}" data-loja-pontos="{{ loja_pontos_a_converter }}">Converter Meus AVA-COIN!</button>
        {% else %}
          <p>Você precisa de pelo menos 1000 AVA-COIN para realizar uma conversão.</p>
          <button class="button convert-button" disabled>Pontos Insuficientes</button>
        {% endif %}
      </div>

      {# Informações da Conta Existente #}
      <div class="account-info-box">
        <h2>{{ 'customer.account.details' | t }}</h2>
        {{ customer.default_address | format_address }}
        <a href="{{ routes.account_addresses_url }}">
          {{ 'customer.account.view_addresses' | t }} ({{ customer.addresses_count }})
        </a>
      </div>
    </div>
  </div>
</div>

{% comment %}
  SCRIPT PARA OUVIR MENSAGENS DO IFRAME (JOGO) E ENVIAR PARA SEU SERVERLESS
  Este script deve estar no final do seu arquivo .liquid ou em um arquivo .js separado.
{% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
      // Listener para receber pontos do jogo no iframe
      window.addEventListener('message', function(event) {
          // *** IMPORTANTE: Substitua 'https://SEU-DOMINIO-VERCEL.vercel.app' pelo domínio real do seu jogo no Vercel ***
          // Isso é uma medida de segurança para garantir que a mensagem vem do seu jogo.
          if (event.origin !== 'https://SEU-DOMINIO-VERCEL.vercel.app') {
              console.warn('Mensagem de origem desconhecida ignorada:', event.origin);
              return;
          }

          const data = event.data;

          if (data && data.type === 'GAME_POINTS_UPDATE') {
              const game_ava_coin_gained = parseInt(data.avaCoin); // Supondo que o jogo envie a quantia de AVA-COIN ganha
              const customerId = '{{ customer.id | default: null }}'; 
              
              if (customerId && !isNaN(game_ava_coin_gained) && game_ava_coin_gained > 0) {
                  console.log('AVA-COIN recebidos do jogo:', game_ava_coin_gained, 'para cliente:', customerId);

                  // *** IMPORTANTE: Substitua 'https://SUA-API-VERCEL.vercel.app/api/update-ava-coin' pela URL real da sua função Serverless que adiciona AVA-COIN ***
                  fetch('https://SUA-API-VERCEL.vercel.app/api/update-ava-coin', { 
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({
                          customerId: customerId,
                          avaCoinGained: game_ava_coin_gained
                      })
                  })
                  .then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          console.log('AVA-COIN atualizados com sucesso no Shopify!');
                          // Opcional: Recarregar a página para mostrar os AVA-COIN atualizados instantaneamente
                          window.location.reload(); 
                      } else {
                          console.error('Falha ao atualizar AVA-COIN:', data.message);
                          alert('Erro ao registrar AVA-COIN do jogo: ' + data.message);
                      }
                  })
                  .catch(error => {
                      console.error('Erro ao enviar AVA-COIN para o backend:', error);
                      alert('Ocorreu um erro ao registrar AVA-COIN do jogo.');
                  });

              } else if (!customerId) {
                  console.warn('Cliente não logado. Não é possível registrar AVA-COIN do jogo.');
                  // Você pode notificar o usuário para fazer login
              }
          }
      });

      // Listener para o botão de conversão de AVA-COIN para Pontos da Loja
      const convertButton = document.querySelector('.convert-button');

      if (convertButton) {
        convertButton.addEventListener('click', function() {
          const avaCoin = parseInt(this.dataset.avaCoin);
          const lojaPontos = parseInt(this.dataset.lojaPontos);
          const customerId = '{{ customer.id | default: null }}';

          if (customerId && !isNaN(avaCoin) && !isNaN(lojaPontos) && avaCoin >= 1000) {
            // *** IMPORTANTE: Substitua 'https://SUA-API-VERCEL.vercel.app/api/convert-ava-coin' pela URL real da sua função Serverless de conversão ***
            fetch('https://SUA-API-VERCEL.vercel.app/api/convert-ava-coin', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                customerId: customerId,
                avaCoinToConvert: avaCoin,      // Total de AVA-COIN do cliente que serão zerados
                lojaPointsToAdd: lojaPontos     // Pontos da loja a serem adicionados
              })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                alert('Conversão realizada com sucesso! ' + avaCoin + ' AVA-COIN convertidos em ' + lojaPontos + ' pontos da loja.');
                window.location.reload(); // Recarrega a página para atualizar os pontos
              } else {
                alert('Erro na conversão: ' + data.message);
              }
            })
            .catch(error => {
              console.error('Erro ao enviar requisição de conversão:', error);
              alert('Ocorreu um erro ao tentar converter AVA-COIN.');
            });
          } else {
            console.warn('Condições para conversão não atendidas.');
          }
        });
      }
  });
</script>


{% schema %}
{
  "name": "t:sections.main-account.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}